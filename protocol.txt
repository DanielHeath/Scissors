

Scenario: User logging in to view a protected resource.

|   Downstream site (eg secret.com)                          |   Authentication Server (eg authenticator.net)             |
|   ------------------------------------------------------   |   ------------------------------------------------------   |
|   User requests authenticated resource.                    |                                                            |
|   Site issues redirect to authentication server.           |                                                            |
|                                                            |   Authentication server displays login form                |
|                                                            |   User submits name/password                               |
|                                                            |   Checks login details/ban status. Sets session cookie.    |
|                                                            |   Redirects back to downstream site with URL parameters    |
|                                                            |   containing user data (identity, email - anything at      |
|                                                            |   all, really). The URL parameters also contain the        |
|                                                            |   HMAC-SHA1 signature of the provided data + a pre         |
|                                                            |   shared key + the current time (rounded to 5 minutes)     |
|   Verifies that signature matches user details/key.        |                                                            |
|   Sets cookie, stores user details.                        |                                                            |
|   User is now logged in.                                   |                                                            |


Scenario: User already logged in on authentication service, using a second service

|   Second Downstream site (eg profile.me)                   |   Authentication Server (eg authenticator.net)             |
|   ------------------------------------------------------   |   ------------------------------------------------------   |
|   User requests authenticated resource.                    |                                                            |
|   Site issues redirect to authentication server.           |                                                            |
|                                                            |   Authentication server loads user details from session    |
|                                                            |   Redirects back to downstream site with URL parameters    |
|                                                            |   containing user data (identity, email - anything at      |
|                                                            |   all, really). The URL parameters also contain the        |
|                                                            |   HMAC-SHA1 signature of the provided data + a pre         |
|                                                            |   shared key + the current time (rounded to 5 minutes)     |
|   Verifies that signature matches user details/key.        |                                                            |
|   Sets cookie, stores user details.                        |                                                            |
|   User is now logged in.                                   |                                                            |


Scenario: Admin bans a user

|   Downstream site (eg secret.com)                          |   Authentication Server (eg authenticator.net)             |
|   ------------------------------------------------------   |   ------------------------------------------------------   |
|                                                            |   Logged in admin POST's to the 'ban user 13231' url.      |
|                                                            |   Stores users banned status                               |
|                                                            |   Iterates through the list of downstream sites, POST'ing  |
|                                                            |   'ban user 13231' to each site (retrying once for 5xx)    |
|   Receives POST from upstream site, verifies signature     |                                                            |
|   Marks user as banned.                                    |                                                            |



Further examples TBA based on discussion with https://github.com/xzyfer :

Styling - how will multiple endpoints for a single app be styled - who is responsible for maintenance of stylesheets etc
 * SSO team responsible for not changing their HTML without a version bump to the api
 * Downstream team responsible for registering their apps. They will need to provide:
  - Login/logoff endpoint(s)
  - An html fragment to be included for each endpoint.
  - any specific crossdomain CSP headers / crossdomain.xml
  - a secure, secret key to encrypt comms
  - on *each* login attempt, some (arbitrary) data which will be passed back to the login endpoint

Fraud
 * SSO app will need to integrate with Threatmetrix, maybe maxmind, etc for fraud detection
 * pre & post registration/authentication hooks (record user signups for fraud analysis)
 * Detailed, structured logs need to be available for fraud analysis. Need to store:
   - login/logout/register/forgot password events
   - events from downstream apps (eg paid for contest)
   - third party events (Threatmetrix etc)


Suspension as well as banning
Bans affecting different sites separately (eg banned as designer for uploading copyrighted material shouldn't ban from being a CH)

Are Bans/suspensions a special case of forcing updates out to all downstream sites?
